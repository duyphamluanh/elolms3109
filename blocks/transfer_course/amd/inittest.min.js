/*
 * Javascript needed for license tool datatables
 *
 * @package    block_transfer_course
 * @copyright  2018 Kentucky Educational Television
 */

define([
  "jquery",
  'block_transfer_course/jquery.dataTables',
  'block_transfer_course/dataTables.buttons',
  'block_transfer_course/dataTables.fixedHeader',
  'block_transfer_course/dataTables.select',
  "core/ajax",
  "core/str",
  "core/notification",
  "core/modal_factory",
  "core/modal_events",
  "core/templates",
], function ($,datatables,
  buttons,
  dtfixedHeader, 
  select,
  Ajax, Str, Notification, ModalFactory, ModalEvents, Templates) {
  /**
   * Selectors.
   *
   * @access private
   * @type {Object}
   */

  return {
    init: function (identifier, config) {
      $(document).ready(function () {
        var table, daysofffromfiletable;
        var trCount = $("#generaltable tbody tr");
        var tdCount = $("#generaltable tbody tr td");

        if(trCount.length <= 1 && tdCount.length < 2){
          $("#generaltable tbody").remove();
        }
        table = $('#generaltable').DataTable({
          "language": {
            "emptyTable": "No data available in table",
            "searchPanes": {
              "emptyPanes": 'There are no panes to display. :/'
          }
          }, 
          columnDefs: [{
            "defaultContent": "-",
            "targets": "_all"
          }],
          columns: [
            { data: "date" },
            { data: "event" },
            { data: "year" },
            { data: "semester" },
            { data: "action" }
          ]
        });

        // $.each($("#generaltable tbody tr td.c0"), function(index){
        //   var sortValue = Date.parse($("#generaltable tbody tr td.c0")[index].textContent);
        //   $("#generaltable tbody tr td.c0")[index].setAttribute('data-sort', sortValue);
        // }).promise().done( function(){
        // });

        $("#id_dayoff_add").click(function(e){
          var date_day = $('#id_dayoff_date_day').find(":selected").text();
          var date_month = $('#id_dayoff_date_month').find(":selected").text();
          var date_year = $('#id_dayoff_date_year').find(":selected").text();
          var yearschool = $('#id_dayoff_schoolyear').val();
          var event = $('#id_dayoff_event').val();
          var semester = $('#id_dayoff_semester').find(":selected").text();
          $.ajax({
              type: "POST",
              url:  $("#addDayOffApiUrl").val(),
              data: {
                dayoff_day: date_day,
                dayoff_month: date_month,
                dayoff_year:  date_year,
                dayoff_yearschool: yearschool,
                dayoff_event: event,
                dayoff_semester: semester,
                sesskey: $("#sesskey").val()
              },
              dataType: 'json',
              cache: false,
              success: function(response) {
                var btnDelete = "<button id='removeDayOff_"+response+"' class='btn btn-primary' value="+response+">Remove</button>";
                var dayoff = date_year+'/'+swapformatMonth__F2m(date_month)+'/'+ pad2(date_day);
                
                table.rows.add( [{
                  "date": dayoff,
                  "event":event,
                  "year": yearschool,
                  "semester": semester,
                  "action": btnDelete,
                }]).draw();
                
                $("#removeDayOff_"+response).click(function(e){
                  var btn = $(this);
                    $.ajax({
                      type: "POST",
                      url:  $("#deleteDayOffApiUrl").val(),
                      data: {
                        dayoff_timestamp: $(this).attr('value'),
                        sesskey: $("#sesskey").val()
                      },
                      dataType: 'json',
                      cache: false,
                      success: function(response) {
                        var tr = btn.parents('tr');
                        table.row(tr).remove().draw(false);
                        alert("Day off has been removed");
                      },
                      error: function(response) {
                      }
                  });
                })
                
                alert("Day off has been added");
              },
              error: function(response) {
                if(response.status == 406){
                  alert("Ngày nghĩ đã tồn tại");
                }
              }
          });
        
        })

        // $(document).on('click','.paginate_button',function(e){
        //   // console.log("CLicked paginate_button" + e);
        //   $("[id^='removeDayOff_']").click(function(e){
        //     // console.log($(this).attr('value'));
        //     var btn = $(this);
        //       $.ajax({
        //         type: "POST",
        //         url:  $("#deleteDayOffApiUrl").val(),
        //         data: {
        //           dayoff_timestamp: $(this).attr('value'),
        //           sesskey: $("#sesskey").val()
        //         },
        //         dataType: 'json',
        //         cache: false,
        //         success: function(response) {
        //           var tr = btn.parents('tr');
        //           table.row(tr).remove().draw(false);
        //           alert("Day off has been removed");
        //         },
        //         error: function(response) {
        //         }
        //     });
        //   })
        // })
        
        // Add event for first time create Datatable (only work for first pagination)
        // $("[id^='removeDayOff_']").on('click',function(e){
        //   // console.log($(this).attr('value'));
        //   var btn = $(this);
        //     $.ajax({
        //       type: "POST",
        //       url:  $("#deleteDayOffApiUrl").val(),
        //       data: {
        //         dayoff_timestamp: $(this).attr('value'),
        //         sesskey: $("#sesskey").val()
        //       },
        //       dataType: 'json',
        //       cache: false,
        //       success: function(response) {
        //         var tr = btn.parents('tr');
        //         table.row(tr).remove().draw(false);
        //         alert("Day off has been removed");
        //       },
        //       error: function(response) {
        //       }
        //   });
        // })

        daysofffromfiletable = $('#daysofffromfiletable').DataTable({
          "language": {
            "emptyTable": "No data available in table"
          }, 
          columnDefs: [{
            "defaultContent": "-",
            "targets": "_all"
          }],
          columns: [
            { data: "date" },
            { data: "semester" },
            { data: "year" },
            { data: "event" },
        ]
        });

        $("#addAllDaysOff").on("click", function(e){
          var tableData = daysofffromfiletable.rows().data();
          console.log(tableData.length);
          for(var i = 0; i < tableData.length; i++){
            var [date_year,date_month,date_day] = tableData[i].date.split('-');
            var dayoff_event = tableData[i].event;
            var dayoff_semester = tableData[i].semester;
            var dayoff_yearschool = tableData[i].year;
            console.log(date_day +"/"+ date_month +"/"+ date_year);
            $.ajax({
                type: "POST",
                url:  $("#addDayOffApiUrl").val(),
                data: {
                  dayoff_day: date_day,
                  dayoff_month: swapformatMonth__m2F(date_month),
                  dayoff_year:  date_year,
                  dayoff_yearschool:  dayoff_yearschool,
                  dayoff_event: dayoff_event,
                  dayoff_semester: dayoff_semester,
                  sesskey: $("#sesskey").val()
                },
                dataType: 'json',
                cache: false,
                async: false,
                success: function(response) {
                  var btnDelete = "<button id='removeDayOff_"+response+"' class='btn btn-primary' value="+response+">Remove</button>";
                  var dayoff = date_year+'/'+swapformatMonth__F2m(date_month)+'/'+ date_day;
                  
                  table.rows.add( [{
                    "date": dayoff,
                    "event": dayoff_event,
                    "year": dayoff_yearschool,
                    "semester": dayoff_semester,
                    "action": btnDelete,
                  }]).draw();
                  
                  $("#removeDayOff_"+response).click(function(e){
                    // console.log($(this).attr('value'));
                    var btn = $(this);
                      $.ajax({
                        type: "POST",
                        url:  $("#deleteDayOffApiUrl").val(),
                        data: {
                          dayoff_timestamp: $(this).attr('value'),
                          sesskey: $("#sesskey").val()
                        },
                        dataType: 'json',
                        cache: false,
                        success: function(response) {
                          var tr = btn.parents('tr');
                          table.row(tr).remove().draw(false);
                          // alert("Day off has been removed");
                        },
                        error: function(response) {
                        }
                    });
                  })                 
                },
                error: function(response) {
                  if(response.status == 406){
                    // alert("Ngày nghĩ đã tồn tại");
                  }
                }
            });
          }
          daysofffromfiletable.clear().draw();
        })

        $('#generaltable tbody').on( 'click', '[id^="removeDayOff_"]', function () {
          var btn = $(this);
          $.ajax({
            type: "POST",
            url:  $("#deleteDayOffApiUrl").val(),
            data: {
              dayoff_timestamp: $(this).attr('value'),
              sesskey: $("#sesskey").val()
            },
            dataType: 'json',
            cache: false,
            success: function(response) {
              var tr = btn.parents('tr');
              table.row(tr).remove().draw(false);
              alert("Day off has been removed");
            },
            error: function(response) {
            }
          });
        } );

        // Add event for row which have been added when Datatable redraw.
        // table.on( 'draw', function () {
        //   debugger;
        //   // var rows = $("#generaltable tbody tr");
        //   var info = table.page.info();
        //   if(info.end > info.length){
        //     var timestamp = $("#generaltable tbody tr:last td:last button").attr('value');
        //     // $("[id^='removeDayOff_"+timestamp+"']").click(function(e){
        //     $("[id^='removeDayOff_']").click(function(e){
        //       // console.log($(this).attr('value'));
        //       var btn = $(this);
        //         $.ajax({
        //           type: "POST",
        //           url:  $("#deleteDayOffApiUrl").val(),
        //           data: {
        //             dayoff_timestamp: $(this).attr('value'),
        //             sesskey: $("#sesskey").val()
        //           },
        //           dataType: 'json',
        //           cache: false,
        //           success: function(response) {
        //             var tr = btn.parents('tr');
        //             table.row(tr).remove().draw(false);
        //             alert("Day off has been removed");
        //           },
        //           error: function(response) {
        //           }
        //       });
        //     })
        //   }
        // });

      });
    },
  };
  function swapformatMonth__m2F(month) {
    switch (month) {
      case "01":
        return "January";
        break;
      case "02":
        return "February";
        break;
      case "03":
        return "March";
        break;
      case "04":
        return "April";
        break;
      case "05":
        return "May";
        break;
      case "06":
        return "June";
        break;
      case "07":
        return "July";
        break;
      case "08":
        return "August";
        break;
      case "09":
        return "September";
        break;
      case "10":
        return "October";
        break;
      case "11":
        return "November";
        break;
      case "12":
        return "December";
        break;
      default:
        return month;
    }
  }
  function swapformatMonth__F2m(month) {
    switch (month) {
      case "January":
        return "01";
        break;
      case "February":
        return "02";
        break;
      case "March":
        return "03";
        break;
      case "April":
        return "04";
        break;
      case "May":
        return "05";
        break;
      case "June":
        return "06";
        break;
      case "July":
        return "07";
        break;
      case "August":
        return "08";
        break;
      case "September":
        return "09";
        break;
      case "October":
        return "10";
        break;
      case "November":
        return "11";
        break;
      case "December":
        return "12";
        break;
      default:
        return month;
    }
  }
  function swapformatMonth__M2m(month) {
    switch (month) {
      case "Jan":
        return "01";
        break;
      case "Feb":
        return "02";
        break;
      case "Mar":
        return "03";
        break;
      case "Apr":
        return "04";
        break;
      case "May":
        return "05";
        break;
      case "June":
        return "06";
        break;
      case "Jul":
        return "07";
        break;
      case "Aug":
        return "08";
        break;
      case "Sep":
        return "09";
        break;
      case "Oct":
        return "10";
        break;
      case "Nov":
        return "11";
        break;
      case "Dec":
        return "12";
        break;
      default:
        return month;
    }
  }
  function pad2(d){
    return (d < 10) ? '0' + d.toString() : d.toString();
  }
  function deleteRow(btn) {
    var row = btn.parentNode.parentNode;
    row.parentNode.removeChild(row);
  }
});
